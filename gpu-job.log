2025-02-21 16:56:22.912064: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1740178583.519022    8445 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1740178583.622545    8445 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-21 16:56:24.776954: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
W0000 00:00:1740178615.741919    8445 gpu_device.cc:2344] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
/home/burgetlt/miniconda3/envs/py39/lib/python3.9/site-packages/keras/src/layers/core/masking.py:47: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)
Found 3907 samples across labels: ['aunt', 'brother', 'child', 'dad', 'grandma', 'man', 'mom', 'person', 'uncle']
Train samples: 2734, Validation samples: 586, Test samples: 587
Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ masking (Masking)               │ (None, 50, 126)        │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ bidirectional (Bidirectional)   │ (None, 50, 256)        │       261,120 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ bidirectional_1 (Bidirectional) │ (None, 256)            │       394,240 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout (Dropout)               │ (None, 256)            │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 9)              │         2,313 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 657,673 (2.51 MB)
 Trainable params: 657,673 (2.51 MB)
 Non-trainable params: 0 (0.00 B)
Epoch 1/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m2:05[0m 13s/step - accuracy: 0.0977 - loss: 2.3355[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m7s[0m 874ms/step - accuracy: 0.1045 - loss: 2.3239[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m8s[0m 1s/step - accuracy: 0.1118 - loss: 2.3132   [1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m6s[0m 962ms/step - accuracy: 0.1178 - loss: 2.3039[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m6s[0m 1s/step - accuracy: 0.1219 - loss: 2.2965   [1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m4s[0m 955ms/step - accuracy: 0.1251 - loss: 2.2914[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m3s[0m 864ms/step - accuracy: 0.1268 - loss: 2.2874[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m2s[0m 802ms/step - accuracy: 0.1295 - loss: 2.2825[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m1s[0m 755ms/step - accuracy: 0.1336 - loss: 2.2776[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 717ms/step - accuracy: 0.1379 - loss: 2.2729[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 674ms/step - accuracy: 0.1416 - loss: 2.2686
Epoch 1: val_loss improved from inf to 2.09035, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m22s[0m 937ms/step - accuracy: 0.1448 - loss: 2.2650 - val_accuracy: 0.3140 - val_loss: 2.0904 - learning_rate: 0.0010
Epoch 2/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m11s[0m 1s/step - accuracy: 0.2930 - loss: 2.1076[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 457ms/step - accuracy: 0.3145 - loss: 2.0949[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 459ms/step - accuracy: 0.3247 - loss: 2.0837[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 459ms/step - accuracy: 0.3285 - loss: 2.0729[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 457ms/step - accuracy: 0.3337 - loss: 2.0610[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 455ms/step - accuracy: 0.3370 - loss: 2.0506[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 448ms/step - accuracy: 0.3388 - loss: 2.0406[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 447ms/step - accuracy: 0.3406 - loss: 2.0310[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 442ms/step - accuracy: 0.3417 - loss: 2.0224[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 439ms/step - accuracy: 0.3429 - loss: 2.0140[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 425ms/step - accuracy: 0.3439 - loss: 2.0060
Epoch 2: val_loss improved from 2.09035 to 1.67153, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 480ms/step - accuracy: 0.3447 - loss: 1.9993 - val_accuracy: 0.4505 - val_loss: 1.6715 - learning_rate: 0.0010
Epoch 3/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 928ms/step - accuracy: 0.4453 - loss: 1.6209[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 452ms/step - accuracy: 0.4385 - loss: 1.6350[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 458ms/step - accuracy: 0.4230 - loss: 1.6670[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 454ms/step - accuracy: 0.4190 - loss: 1.6793[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 451ms/step - accuracy: 0.4193 - loss: 1.6813[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 446ms/step - accuracy: 0.4198 - loss: 1.6811[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 441ms/step - accuracy: 0.4216 - loss: 1.6782[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 436ms/step - accuracy: 0.4234 - loss: 1.6750[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 434ms/step - accuracy: 0.4251 - loss: 1.6722[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 430ms/step - accuracy: 0.4265 - loss: 1.6691[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.4280 - loss: 1.6655
Epoch 3: val_loss improved from 1.67153 to 1.49356, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 489ms/step - accuracy: 0.4292 - loss: 1.6626 - val_accuracy: 0.5034 - val_loss: 1.4936 - learning_rate: 0.0010
Epoch 4/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 962ms/step - accuracy: 0.5000 - loss: 1.4708[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 437ms/step - accuracy: 0.4990 - loss: 1.5006[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.5050 - loss: 1.4928[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 436ms/step - accuracy: 0.5089 - loss: 1.4916[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.5119 - loss: 1.4846[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 431ms/step - accuracy: 0.5146 - loss: 1.4797[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 427ms/step - accuracy: 0.5171 - loss: 1.4751[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 425ms/step - accuracy: 0.5185 - loss: 1.4710[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 423ms/step - accuracy: 0.5196 - loss: 1.4683[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.5210 - loss: 1.4649[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 408ms/step - accuracy: 0.5228 - loss: 1.4609
Epoch 4: val_loss improved from 1.49356 to 1.39294, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 462ms/step - accuracy: 0.5243 - loss: 1.4576 - val_accuracy: 0.5137 - val_loss: 1.3929 - learning_rate: 0.0010
Epoch 5/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 917ms/step - accuracy: 0.5430 - loss: 1.3697[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 447ms/step - accuracy: 0.5488 - loss: 1.3668[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 445ms/step - accuracy: 0.5477 - loss: 1.3566[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 443ms/step - accuracy: 0.5514 - loss: 1.3423[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 441ms/step - accuracy: 0.5558 - loss: 1.3304[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 436ms/step - accuracy: 0.5579 - loss: 1.3259[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.5603 - loss: 1.3219[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.5611 - loss: 1.3218[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 425ms/step - accuracy: 0.5620 - loss: 1.3212[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 422ms/step - accuracy: 0.5628 - loss: 1.3203[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 409ms/step - accuracy: 0.5638 - loss: 1.3192
Epoch 5: val_loss improved from 1.39294 to 1.26900, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 462ms/step - accuracy: 0.5646 - loss: 1.3182 - val_accuracy: 0.5853 - val_loss: 1.2690 - learning_rate: 0.0010
Epoch 6/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 914ms/step - accuracy: 0.6523 - loss: 1.0905[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.6309 - loss: 1.1204[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.6246 - loss: 1.1373[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 433ms/step - accuracy: 0.6225 - loss: 1.1424[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 433ms/step - accuracy: 0.6194 - loss: 1.1490[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 432ms/step - accuracy: 0.6172 - loss: 1.1571[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 427ms/step - accuracy: 0.6165 - loss: 1.1629[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 424ms/step - accuracy: 0.6166 - loss: 1.1674[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 423ms/step - accuracy: 0.6167 - loss: 1.1708[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.6168 - loss: 1.1731[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 407ms/step - accuracy: 0.6168 - loss: 1.1754
Epoch 6: val_loss improved from 1.26900 to 1.20939, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 460ms/step - accuracy: 0.6168 - loss: 1.1772 - val_accuracy: 0.5922 - val_loss: 1.2094 - learning_rate: 0.0010
Epoch 7/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 902ms/step - accuracy: 0.6406 - loss: 1.1290[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 431ms/step - accuracy: 0.6494 - loss: 1.1002[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.6526 - loss: 1.0961[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.6506 - loss: 1.1036[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.6483 - loss: 1.1083[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 433ms/step - accuracy: 0.6464 - loss: 1.1131[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.6447 - loss: 1.1170[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 426ms/step - accuracy: 0.6431 - loss: 1.1208[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 422ms/step - accuracy: 0.6418 - loss: 1.1243[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.6402 - loss: 1.1275[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 408ms/step - accuracy: 0.6386 - loss: 1.1305
Epoch 7: val_loss improved from 1.20939 to 1.14917, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 464ms/step - accuracy: 0.6373 - loss: 1.1331 - val_accuracy: 0.6143 - val_loss: 1.1492 - learning_rate: 0.0010
Epoch 8/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 925ms/step - accuracy: 0.7227 - loss: 0.9345[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 441ms/step - accuracy: 0.7109 - loss: 0.9625[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 437ms/step - accuracy: 0.6997 - loss: 0.9836[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 435ms/step - accuracy: 0.6930 - loss: 0.9994[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 435ms/step - accuracy: 0.6883 - loss: 1.0110[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.6840 - loss: 1.0217[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 430ms/step - accuracy: 0.6812 - loss: 1.0273[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 426ms/step - accuracy: 0.6796 - loss: 1.0306[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 424ms/step - accuracy: 0.6788 - loss: 1.0324[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.6782 - loss: 1.0336[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 408ms/step - accuracy: 0.6781 - loss: 1.0342
Epoch 8: val_loss improved from 1.14917 to 1.07594, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 461ms/step - accuracy: 0.6779 - loss: 1.0347 - val_accuracy: 0.6348 - val_loss: 1.0759 - learning_rate: 0.0010
Epoch 9/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 894ms/step - accuracy: 0.6797 - loss: 1.0275[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 444ms/step - accuracy: 0.6826 - loss: 1.0210[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 437ms/step - accuracy: 0.6860 - loss: 1.0154[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 437ms/step - accuracy: 0.6866 - loss: 1.0129[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 437ms/step - accuracy: 0.6873 - loss: 1.0077[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.6874 - loss: 1.0041[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.6882 - loss: 1.0010[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 427ms/step - accuracy: 0.6882 - loss: 0.9996[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 425ms/step - accuracy: 0.6884 - loss: 0.9990[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.6884 - loss: 0.9983[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 408ms/step - accuracy: 0.6884 - loss: 0.9981
Epoch 9: val_loss improved from 1.07594 to 1.04024, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 462ms/step - accuracy: 0.6884 - loss: 0.9978 - val_accuracy: 0.6502 - val_loss: 1.0402 - learning_rate: 0.0010
Epoch 10/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 908ms/step - accuracy: 0.6992 - loss: 1.0446[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 431ms/step - accuracy: 0.6816 - loss: 1.0489[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.6797 - loss: 1.0374[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.6812 - loss: 1.0270[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.6826 - loss: 1.0180[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.6834 - loss: 1.0131[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.6848 - loss: 1.0086[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 424ms/step - accuracy: 0.6857 - loss: 1.0048[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 422ms/step - accuracy: 0.6860 - loss: 1.0025[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 420ms/step - accuracy: 0.6864 - loss: 0.9996[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 407ms/step - accuracy: 0.6869 - loss: 0.9974
Epoch 10: val_loss did not improve from 1.04024
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m5s[0m 455ms/step - accuracy: 0.6872 - loss: 0.9957 - val_accuracy: 0.6519 - val_loss: 1.0454 - learning_rate: 0.0010
Epoch 11/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 867ms/step - accuracy: 0.6680 - loss: 1.0350[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.6729 - loss: 1.0103[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 440ms/step - accuracy: 0.6808 - loss: 0.9880[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 436ms/step - accuracy: 0.6832 - loss: 0.9794[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 440ms/step - accuracy: 0.6859 - loss: 0.9714[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 436ms/step - accuracy: 0.6877 - loss: 0.9659[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 432ms/step - accuracy: 0.6880 - loss: 0.9665[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.6876 - loss: 0.9673[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 422ms/step - accuracy: 0.6877 - loss: 0.9682[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 421ms/step - accuracy: 0.6873 - loss: 0.9699[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 408ms/step - accuracy: 0.6873 - loss: 0.9700
Epoch 11: val_loss did not improve from 1.04024
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m5s[0m 455ms/step - accuracy: 0.6874 - loss: 0.9701 - val_accuracy: 0.6553 - val_loss: 1.0478 - learning_rate: 0.0010
Epoch 12/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 885ms/step - accuracy: 0.7266 - loss: 0.8545[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 443ms/step - accuracy: 0.7188 - loss: 0.8802[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 438ms/step - accuracy: 0.7101 - loss: 0.9055[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.7047 - loss: 0.9223[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 438ms/step - accuracy: 0.7012 - loss: 0.9329[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 441ms/step - accuracy: 0.6997 - loss: 0.9368[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 438ms/step - accuracy: 0.6987 - loss: 0.9405[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 436ms/step - accuracy: 0.6982 - loss: 0.9425[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 434ms/step - accuracy: 0.6974 - loss: 0.9445[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 432ms/step - accuracy: 0.6966 - loss: 0.9471[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 418ms/step - accuracy: 0.6957 - loss: 0.9493
Epoch 12: val_loss improved from 1.04024 to 1.02465, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 478ms/step - accuracy: 0.6950 - loss: 0.9511 - val_accuracy: 0.6553 - val_loss: 1.0246 - learning_rate: 0.0010
Epoch 13/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 948ms/step - accuracy: 0.6953 - loss: 0.9676[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 453ms/step - accuracy: 0.6875 - loss: 0.9512[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 448ms/step - accuracy: 0.6892 - loss: 0.9451[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 444ms/step - accuracy: 0.6893 - loss: 0.9478[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 443ms/step - accuracy: 0.6908 - loss: 0.9443[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 443ms/step - accuracy: 0.6910 - loss: 0.9447[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 438ms/step - accuracy: 0.6913 - loss: 0.9454[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 436ms/step - accuracy: 0.6918 - loss: 0.9445[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 433ms/step - accuracy: 0.6926 - loss: 0.9429[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 429ms/step - accuracy: 0.6937 - loss: 0.9412[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.6945 - loss: 0.9395
Epoch 13: val_loss improved from 1.02465 to 1.00184, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 469ms/step - accuracy: 0.6952 - loss: 0.9382 - val_accuracy: 0.6689 - val_loss: 1.0018 - learning_rate: 0.0010
Epoch 14/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 911ms/step - accuracy: 0.7070 - loss: 0.9075[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 443ms/step - accuracy: 0.6992 - loss: 0.9195[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 455ms/step - accuracy: 0.7014 - loss: 0.9136[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 449ms/step - accuracy: 0.7033 - loss: 0.9098[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 447ms/step - accuracy: 0.7023 - loss: 0.9133[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 444ms/step - accuracy: 0.7021 - loss: 0.9136[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 440ms/step - accuracy: 0.7026 - loss: 0.9131[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 435ms/step - accuracy: 0.7033 - loss: 0.9123[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 431ms/step - accuracy: 0.7039 - loss: 0.9126[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 427ms/step - accuracy: 0.7047 - loss: 0.9117[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 414ms/step - accuracy: 0.7056 - loss: 0.9101
Epoch 14: val_loss did not improve from 1.00184
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 461ms/step - accuracy: 0.7064 - loss: 0.9089 - val_accuracy: 0.6689 - val_loss: 1.0247 - learning_rate: 0.0010
Epoch 15/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 883ms/step - accuracy: 0.7539 - loss: 0.7968[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 429ms/step - accuracy: 0.7451 - loss: 0.8183[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 430ms/step - accuracy: 0.7450 - loss: 0.8151[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 434ms/step - accuracy: 0.7436 - loss: 0.8122[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 438ms/step - accuracy: 0.7424 - loss: 0.8105[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 439ms/step - accuracy: 0.7417 - loss: 0.8112[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 434ms/step - accuracy: 0.7402 - loss: 0.8150[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 432ms/step - accuracy: 0.7391 - loss: 0.8182[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 429ms/step - accuracy: 0.7384 - loss: 0.8207[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 428ms/step - accuracy: 0.7379 - loss: 0.8234[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 415ms/step - accuracy: 0.7374 - loss: 0.8257
Epoch 15: val_loss improved from 1.00184 to 0.94665, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 468ms/step - accuracy: 0.7370 - loss: 0.8276 - val_accuracy: 0.6809 - val_loss: 0.9467 - learning_rate: 0.0010
Epoch 16/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 926ms/step - accuracy: 0.7188 - loss: 0.8963[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 455ms/step - accuracy: 0.7236 - loss: 0.8802[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 450ms/step - accuracy: 0.7263 - loss: 0.8647[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 446ms/step - accuracy: 0.7279 - loss: 0.8543[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 450ms/step - accuracy: 0.7292 - loss: 0.8494[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 448ms/step - accuracy: 0.7296 - loss: 0.8468[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 442ms/step - accuracy: 0.7304 - loss: 0.8444[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 439ms/step - accuracy: 0.7320 - loss: 0.8401[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 437ms/step - accuracy: 0.7335 - loss: 0.8362[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 433ms/step - accuracy: 0.7348 - loss: 0.8327[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 420ms/step - accuracy: 0.7361 - loss: 0.8297
Epoch 16: val_loss improved from 0.94665 to 0.94278, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 482ms/step - accuracy: 0.7371 - loss: 0.8273 - val_accuracy: 0.6792 - val_loss: 0.9428 - learning_rate: 0.0010
Epoch 17/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 971ms/step - accuracy: 0.7031 - loss: 0.8953[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.7168 - loss: 0.8574[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 440ms/step - accuracy: 0.7270 - loss: 0.8325[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.7340 - loss: 0.8158[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 440ms/step - accuracy: 0.7383 - loss: 0.8081[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 440ms/step - accuracy: 0.7423 - loss: 0.8003[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 436ms/step - accuracy: 0.7447 - loss: 0.7955[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 434ms/step - accuracy: 0.7457 - loss: 0.7942[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 432ms/step - accuracy: 0.7470 - loss: 0.7921[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 430ms/step - accuracy: 0.7484 - loss: 0.7891[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.7495 - loss: 0.7871
Epoch 17: val_loss improved from 0.94278 to 0.89603, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 469ms/step - accuracy: 0.7503 - loss: 0.7855 - val_accuracy: 0.7133 - val_loss: 0.8960 - learning_rate: 0.0010
Epoch 18/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 913ms/step - accuracy: 0.7227 - loss: 0.8752[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 443ms/step - accuracy: 0.7324 - loss: 0.8491[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 450ms/step - accuracy: 0.7400 - loss: 0.8295[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 446ms/step - accuracy: 0.7430 - loss: 0.8182[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 446ms/step - accuracy: 0.7446 - loss: 0.8127[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 444ms/step - accuracy: 0.7456 - loss: 0.8091[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 439ms/step - accuracy: 0.7468 - loss: 0.8055[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 435ms/step - accuracy: 0.7476 - loss: 0.8027[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 431ms/step - accuracy: 0.7485 - loss: 0.7997[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 429ms/step - accuracy: 0.7494 - loss: 0.7970[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 417ms/step - accuracy: 0.7500 - loss: 0.7949
Epoch 18: val_loss did not improve from 0.89603
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 465ms/step - accuracy: 0.7506 - loss: 0.7931 - val_accuracy: 0.6809 - val_loss: 0.9540 - learning_rate: 0.0010
Epoch 19/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 902ms/step - accuracy: 0.7109 - loss: 0.8723[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 453ms/step - accuracy: 0.7295 - loss: 0.8327[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 457ms/step - accuracy: 0.7337 - loss: 0.8185[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 454ms/step - accuracy: 0.7375 - loss: 0.8087[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 450ms/step - accuracy: 0.7394 - loss: 0.8002[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 450ms/step - accuracy: 0.7405 - loss: 0.7972[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 443ms/step - accuracy: 0.7399 - loss: 0.7960[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 438ms/step - accuracy: 0.7400 - loss: 0.7944[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 434ms/step - accuracy: 0.7398 - loss: 0.7938[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 433ms/step - accuracy: 0.7396 - loss: 0.7929[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 420ms/step - accuracy: 0.7397 - loss: 0.7916
Epoch 19: val_loss did not improve from 0.89603
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 467ms/step - accuracy: 0.7398 - loss: 0.7906 - val_accuracy: 0.6945 - val_loss: 0.9211 - learning_rate: 0.0010
Epoch 20/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 902ms/step - accuracy: 0.7344 - loss: 0.7717[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 430ms/step - accuracy: 0.7441 - loss: 0.7617[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 436ms/step - accuracy: 0.7452 - loss: 0.7606[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 437ms/step - accuracy: 0.7464 - loss: 0.7573[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 437ms/step - accuracy: 0.7474 - loss: 0.7576[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 438ms/step - accuracy: 0.7484 - loss: 0.7588[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 433ms/step - accuracy: 0.7488 - loss: 0.7613[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.7496 - loss: 0.7625[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 429ms/step - accuracy: 0.7506 - loss: 0.7626[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 427ms/step - accuracy: 0.7519 - loss: 0.7612[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 414ms/step - accuracy: 0.7529 - loss: 0.7601
Epoch 20: val_loss did not improve from 0.89603

Epoch 20: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 461ms/step - accuracy: 0.7538 - loss: 0.7591 - val_accuracy: 0.7065 - val_loss: 0.9070 - learning_rate: 0.0010
Epoch 21/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 893ms/step - accuracy: 0.7773 - loss: 0.6453[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 451ms/step - accuracy: 0.7764 - loss: 0.6641[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 445ms/step - accuracy: 0.7741 - loss: 0.6720[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 445ms/step - accuracy: 0.7754 - loss: 0.6729[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 441ms/step - accuracy: 0.7744 - loss: 0.6797[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 439ms/step - accuracy: 0.7731 - loss: 0.6855[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 435ms/step - accuracy: 0.7721 - loss: 0.6910[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 432ms/step - accuracy: 0.7717 - loss: 0.6944[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 429ms/step - accuracy: 0.7712 - loss: 0.6972[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 426ms/step - accuracy: 0.7706 - loss: 0.6998[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 412ms/step - accuracy: 0.7703 - loss: 0.7014
Epoch 21: val_loss improved from 0.89603 to 0.87912, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 469ms/step - accuracy: 0.7700 - loss: 0.7028 - val_accuracy: 0.7150 - val_loss: 0.8791 - learning_rate: 5.0000e-04
Epoch 22/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 947ms/step - accuracy: 0.8008 - loss: 0.5920[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 434ms/step - accuracy: 0.7881 - loss: 0.6264[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 442ms/step - accuracy: 0.7828 - loss: 0.6428[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 441ms/step - accuracy: 0.7821 - loss: 0.6522[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 438ms/step - accuracy: 0.7831 - loss: 0.6582[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.7848 - loss: 0.6609[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.7858 - loss: 0.6627[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 424ms/step - accuracy: 0.7871 - loss: 0.6630[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 422ms/step - accuracy: 0.7881 - loss: 0.6630[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 420ms/step - accuracy: 0.7885 - loss: 0.6636[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 407ms/step - accuracy: 0.7887 - loss: 0.6642
Epoch 22: val_loss improved from 0.87912 to 0.87714, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 460ms/step - accuracy: 0.7889 - loss: 0.6647 - val_accuracy: 0.7218 - val_loss: 0.8771 - learning_rate: 5.0000e-04
Epoch 23/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m9s[0m 908ms/step - accuracy: 0.7695 - loss: 0.6771[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 449ms/step - accuracy: 0.7744 - loss: 0.6619[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 451ms/step - accuracy: 0.7750 - loss: 0.6655[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 448ms/step - accuracy: 0.7768 - loss: 0.6648[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 451ms/step - accuracy: 0.7789 - loss: 0.6622[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 450ms/step - accuracy: 0.7799 - loss: 0.6623[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 442ms/step - accuracy: 0.7807 - loss: 0.6640[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 438ms/step - accuracy: 0.7819 - loss: 0.6638[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 433ms/step - accuracy: 0.7833 - loss: 0.6625[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 430ms/step - accuracy: 0.7842 - loss: 0.6619[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.7849 - loss: 0.6616
Epoch 23: val_loss improved from 0.87714 to 0.84862, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 470ms/step - accuracy: 0.7856 - loss: 0.6613 - val_accuracy: 0.7218 - val_loss: 0.8486 - learning_rate: 5.0000e-04
Epoch 24/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 883ms/step - accuracy: 0.7930 - loss: 0.6403[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 431ms/step - accuracy: 0.8008 - loss: 0.6210[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 433ms/step - accuracy: 0.8025 - loss: 0.6144[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 435ms/step - accuracy: 0.8043 - loss: 0.6108[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 436ms/step - accuracy: 0.8042 - loss: 0.6129[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 437ms/step - accuracy: 0.8041 - loss: 0.6158[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 433ms/step - accuracy: 0.8031 - loss: 0.6192[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 428ms/step - accuracy: 0.8027 - loss: 0.6209[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 427ms/step - accuracy: 0.8027 - loss: 0.6221[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 425ms/step - accuracy: 0.8025 - loss: 0.6237[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 412ms/step - accuracy: 0.8023 - loss: 0.6252
Epoch 24: val_loss did not improve from 0.84862
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m5s[0m 459ms/step - accuracy: 0.8021 - loss: 0.6263 - val_accuracy: 0.7287 - val_loss: 0.8643 - learning_rate: 5.0000e-04
Epoch 25/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 881ms/step - accuracy: 0.7812 - loss: 0.6373[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 427ms/step - accuracy: 0.7900 - loss: 0.6328[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 441ms/step - accuracy: 0.7936 - loss: 0.6320[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 444ms/step - accuracy: 0.7954 - loss: 0.6299[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 444ms/step - accuracy: 0.7965 - loss: 0.6309[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 439ms/step - accuracy: 0.7979 - loss: 0.6325[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 434ms/step - accuracy: 0.7983 - loss: 0.6347[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.7986 - loss: 0.6356[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 429ms/step - accuracy: 0.7994 - loss: 0.6356[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 429ms/step - accuracy: 0.8000 - loss: 0.6354[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.8001 - loss: 0.6356
Epoch 25: val_loss did not improve from 0.84862
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 464ms/step - accuracy: 0.8003 - loss: 0.6358 - val_accuracy: 0.7253 - val_loss: 0.8543 - learning_rate: 5.0000e-04
Epoch 26/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 900ms/step - accuracy: 0.8047 - loss: 0.6172[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 433ms/step - accuracy: 0.7930 - loss: 0.6394[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 436ms/step - accuracy: 0.7908 - loss: 0.6470[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 439ms/step - accuracy: 0.7904 - loss: 0.6474[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 441ms/step - accuracy: 0.7921 - loss: 0.6459[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 439ms/step - accuracy: 0.7944 - loss: 0.6427[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 432ms/step - accuracy: 0.7961 - loss: 0.6408[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.7976 - loss: 0.6382[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 428ms/step - accuracy: 0.7987 - loss: 0.6361[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 427ms/step - accuracy: 0.7993 - loss: 0.6350[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 413ms/step - accuracy: 0.7996 - loss: 0.6342
Epoch 26: val_loss did not improve from 0.84862

Epoch 26: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 461ms/step - accuracy: 0.7999 - loss: 0.6336 - val_accuracy: 0.7167 - val_loss: 0.8792 - learning_rate: 5.0000e-04
Epoch 27/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 890ms/step - accuracy: 0.8242 - loss: 0.6230[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 458ms/step - accuracy: 0.8145 - loss: 0.6341[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 458ms/step - accuracy: 0.8103 - loss: 0.6317[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 454ms/step - accuracy: 0.8067 - loss: 0.6347[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 451ms/step - accuracy: 0.8069 - loss: 0.6320[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 447ms/step - accuracy: 0.8066 - loss: 0.6301[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 441ms/step - accuracy: 0.8064 - loss: 0.6276[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 435ms/step - accuracy: 0.8055 - loss: 0.6278[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 431ms/step - accuracy: 0.8049 - loss: 0.6269[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 429ms/step - accuracy: 0.8049 - loss: 0.6262[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 416ms/step - accuracy: 0.8049 - loss: 0.6258
Epoch 27: val_loss did not improve from 0.84862
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m6s[0m 463ms/step - accuracy: 0.8050 - loss: 0.6255 - val_accuracy: 0.7235 - val_loss: 0.8487 - learning_rate: 2.5000e-04
Epoch 28/40
[1m 1/11[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m8s[0m 891ms/step - accuracy: 0.7930 - loss: 0.6892[1m 2/11[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m3s[0m 430ms/step - accuracy: 0.7979 - loss: 0.6591[1m 3/11[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m3s[0m 430ms/step - accuracy: 0.8027 - loss: 0.6394[1m 4/11[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m3s[0m 432ms/step - accuracy: 0.8047 - loss: 0.6288[1m 5/11[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m2s[0m 434ms/step - accuracy: 0.8055 - loss: 0.6233[1m 6/11[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m2s[0m 436ms/step - accuracy: 0.8058 - loss: 0.6211[1m 7/11[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m1s[0m 431ms/step - accuracy: 0.8062 - loss: 0.6186[1m 8/11[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m1s[0m 427ms/step - accuracy: 0.8070 - loss: 0.6154[1m 9/11[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 425ms/step - accuracy: 0.8074 - loss: 0.6134[1m10/11[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 423ms/step - accuracy: 0.8071 - loss: 0.6134[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 410ms/step - accuracy: 0.8070 - loss: 0.6134
Epoch 28: val_loss did not improve from 0.84862
[1m11/11[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m5s[0m 457ms/step - accuracy: 0.8069 - loss: 0.6134 - val_accuracy: 0.7218 - val_loss: 0.8585 - learning_rate: 2.5000e-04
[1m1/3[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 709ms/step - accuracy: 0.7305 - loss: 0.9704[1m2/3[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 717ms/step - accuracy: 0.7207 - loss: 0.9587[1m3/3[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 390ms/step - accuracy: 0.7173 - loss: 0.9541[1m3/3[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 393ms/step - accuracy: 0.7155 - loss: 0.9519
Test loss: 0.9451, Test accuracy: 0.7104
