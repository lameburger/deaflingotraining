2025-02-26 16:23:31.701057: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1740608611.729642   30259 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1740608611.738658   30259 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-26 16:23:31.770262: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
W0000 00:00:1740608614.970693   30259 gpu_device.cc:2344] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
Found 2141 samples across labels: ['bye', 'hello', 'please', 'thankyou']
Train samples: 1498, Validation samples: 321, Test samples: 322
Model: "functional"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 50, 126)   │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ not_equal           │ (None, 50, 126)   │          0 │ input_layer[0][0] │
│ (NotEqual)          │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ masking (Masking)   │ (None, 50, 126)   │          0 │ input_layer[0][0] │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ any (Any)           │ (None, 50)        │          0 │ not_equal[0][0]   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ bidirectional       │ (None, 50, 256)   │    261,120 │ masking[0][0],    │
│ (Bidirectional)     │                   │            │ any[0][0]         │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ bidirectional_1     │ (None, 256)       │    394,240 │ bidirectional[0]… │
│ (Bidirectional)     │                   │            │ any[0][0]         │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dropout (Dropout)   │ (None, 256)       │          0 │ bidirectional_1[… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 4)         │      1,028 │ dropout[0][0]     │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 656,388 (2.50 MB)
 Trainable params: 656,388 (2.50 MB)
 Non-trainable params: 0 (0.00 B)
Epoch 1/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m33s[0m 7s/step - accuracy: 0.2539 - loss: 1.4980[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 403ms/step - accuracy: 0.2637 - loss: 1.4952[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 405ms/step - accuracy: 0.2786 - loss: 1.4890[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 405ms/step - accuracy: 0.2947 - loss: 1.4802[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 406ms/step - accuracy: 0.3114 - loss: 1.4719[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 396ms/step - accuracy: 0.3271 - loss: 1.4639
Epoch 1: val_loss improved from inf to 1.27448, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m10s[0m 621ms/step - accuracy: 0.3384 - loss: 1.4581 - val_accuracy: 0.6012 - val_loss: 1.2745 - learning_rate: 0.0010
Epoch 2/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 974ms/step - accuracy: 0.5156 - loss: 1.2916[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 412ms/step - accuracy: 0.5361 - loss: 1.2679[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 409ms/step - accuracy: 0.5488 - loss: 1.2510[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 409ms/step - accuracy: 0.5586 - loss: 1.2387[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 410ms/step - accuracy: 0.5653 - loss: 1.2264[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 403ms/step - accuracy: 0.5707 - loss: 1.2149
Epoch 2: val_loss improved from 1.27448 to 0.99028, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 476ms/step - accuracy: 0.5745 - loss: 1.2067 - val_accuracy: 0.6947 - val_loss: 0.9903 - learning_rate: 0.0010
Epoch 3/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 923ms/step - accuracy: 0.6016 - loss: 1.0964[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 410ms/step - accuracy: 0.6074 - loss: 1.0700[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 401ms/step - accuracy: 0.6168 - loss: 1.0577[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 407ms/step - accuracy: 0.6239 - loss: 1.0469[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 411ms/step - accuracy: 0.6298 - loss: 1.0369[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 400ms/step - accuracy: 0.6367 - loss: 1.0250
Epoch 3: val_loss improved from 0.99028 to 0.93663, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 473ms/step - accuracy: 0.6417 - loss: 1.0166 - val_accuracy: 0.7009 - val_loss: 0.9366 - learning_rate: 0.0010
Epoch 4/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 903ms/step - accuracy: 0.7578 - loss: 0.8451[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 397ms/step - accuracy: 0.7324 - loss: 0.8814[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 399ms/step - accuracy: 0.7153 - loss: 0.9032[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 398ms/step - accuracy: 0.7103 - loss: 0.9069[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 405ms/step - accuracy: 0.7092 - loss: 0.9039[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 394ms/step - accuracy: 0.7078 - loss: 0.9018
Epoch 4: val_loss improved from 0.93663 to 0.77701, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 481ms/step - accuracy: 0.7068 - loss: 0.9002 - val_accuracy: 0.7321 - val_loss: 0.7770 - learning_rate: 0.0010
Epoch 5/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 940ms/step - accuracy: 0.7344 - loss: 0.7644[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 395ms/step - accuracy: 0.7344 - loss: 0.7648[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 403ms/step - accuracy: 0.7305 - loss: 0.7740[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 403ms/step - accuracy: 0.7312 - loss: 0.7728[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 407ms/step - accuracy: 0.7315 - loss: 0.7721[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 397ms/step - accuracy: 0.7310 - loss: 0.7728
Epoch 5: val_loss did not improve from 0.77701
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 458ms/step - accuracy: 0.7306 - loss: 0.7733 - val_accuracy: 0.7321 - val_loss: 0.7817 - learning_rate: 0.0010
Epoch 6/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 873ms/step - accuracy: 0.7500 - loss: 0.7646[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 412ms/step - accuracy: 0.7627 - loss: 0.7386[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 416ms/step - accuracy: 0.7632 - loss: 0.7326[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 417ms/step - accuracy: 0.7626 - loss: 0.7287[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 416ms/step - accuracy: 0.7613 - loss: 0.7270[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 406ms/step - accuracy: 0.7606 - loss: 0.7243
Epoch 6: val_loss improved from 0.77701 to 0.70951, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 478ms/step - accuracy: 0.7601 - loss: 0.7224 - val_accuracy: 0.7414 - val_loss: 0.7095 - learning_rate: 0.0010
Epoch 7/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 910ms/step - accuracy: 0.7461 - loss: 0.6832[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 414ms/step - accuracy: 0.7500 - loss: 0.6822[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 410ms/step - accuracy: 0.7556 - loss: 0.6727[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 412ms/step - accuracy: 0.7608 - loss: 0.6642[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 409ms/step - accuracy: 0.7633 - loss: 0.6596[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 397ms/step - accuracy: 0.7653 - loss: 0.6559
Epoch 7: val_loss improved from 0.70951 to 0.67931, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 468ms/step - accuracy: 0.7667 - loss: 0.6533 - val_accuracy: 0.7788 - val_loss: 0.6793 - learning_rate: 0.0010
Epoch 8/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 915ms/step - accuracy: 0.7500 - loss: 0.6410[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 395ms/step - accuracy: 0.7549 - loss: 0.6396[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 397ms/step - accuracy: 0.7628 - loss: 0.6319[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 397ms/step - accuracy: 0.7669 - loss: 0.6294[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 398ms/step - accuracy: 0.7712 - loss: 0.6257[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 389ms/step - accuracy: 0.7747 - loss: 0.6226
Epoch 8: val_loss did not improve from 0.67931
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 450ms/step - accuracy: 0.7773 - loss: 0.6204 - val_accuracy: 0.7757 - val_loss: 0.6901 - learning_rate: 0.0010
Epoch 9/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 899ms/step - accuracy: 0.7617 - loss: 0.6795[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 396ms/step - accuracy: 0.7656 - loss: 0.6517[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 402ms/step - accuracy: 0.7682 - loss: 0.6374[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 404ms/step - accuracy: 0.7720 - loss: 0.6265[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 405ms/step - accuracy: 0.7770 - loss: 0.6171[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 395ms/step - accuracy: 0.7803 - loss: 0.6110
Epoch 9: val_loss improved from 0.67931 to 0.63481, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 467ms/step - accuracy: 0.7827 - loss: 0.6067 - val_accuracy: 0.7975 - val_loss: 0.6348 - learning_rate: 0.0010
Epoch 10/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 919ms/step - accuracy: 0.8047 - loss: 0.5622[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 415ms/step - accuracy: 0.8066 - loss: 0.5577[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 407ms/step - accuracy: 0.8108 - loss: 0.5480[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 402ms/step - accuracy: 0.8117 - loss: 0.5462[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 399ms/step - accuracy: 0.8114 - loss: 0.5478[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 391ms/step - accuracy: 0.8110 - loss: 0.5480
Epoch 10: val_loss improved from 0.63481 to 0.62958, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 464ms/step - accuracy: 0.8107 - loss: 0.5482 - val_accuracy: 0.7913 - val_loss: 0.6296 - learning_rate: 0.0010
Epoch 11/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 920ms/step - accuracy: 0.8008 - loss: 0.5445[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 405ms/step - accuracy: 0.8037 - loss: 0.5431[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 403ms/step - accuracy: 0.8114 - loss: 0.5359[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 404ms/step - accuracy: 0.8166 - loss: 0.5284[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 405ms/step - accuracy: 0.8167 - loss: 0.5299[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 395ms/step - accuracy: 0.8168 - loss: 0.5304
Epoch 11: val_loss improved from 0.62958 to 0.61135, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 477ms/step - accuracy: 0.8168 - loss: 0.5308 - val_accuracy: 0.8037 - val_loss: 0.6114 - learning_rate: 0.0010
Epoch 12/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 946ms/step - accuracy: 0.8008 - loss: 0.5539[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 405ms/step - accuracy: 0.8184 - loss: 0.5240[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 408ms/step - accuracy: 0.8234 - loss: 0.5063[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 407ms/step - accuracy: 0.8243 - loss: 0.4998[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 403ms/step - accuracy: 0.8257 - loss: 0.4948[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 393ms/step - accuracy: 0.8258 - loss: 0.4930
Epoch 12: val_loss improved from 0.61135 to 0.57827, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 466ms/step - accuracy: 0.8259 - loss: 0.4916 - val_accuracy: 0.8100 - val_loss: 0.5783 - learning_rate: 0.0010
Epoch 13/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 898ms/step - accuracy: 0.8281 - loss: 0.4917[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 408ms/step - accuracy: 0.8301 - loss: 0.4770[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 407ms/step - accuracy: 0.8299 - loss: 0.4777[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 410ms/step - accuracy: 0.8314 - loss: 0.4745[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 411ms/step - accuracy: 0.8318 - loss: 0.4735[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 399ms/step - accuracy: 0.8319 - loss: 0.4733
Epoch 13: val_loss did not improve from 0.57827
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 459ms/step - accuracy: 0.8320 - loss: 0.4731 - val_accuracy: 0.8006 - val_loss: 0.6393 - learning_rate: 0.0010
Epoch 14/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 880ms/step - accuracy: 0.8203 - loss: 0.5923[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 406ms/step - accuracy: 0.8223 - loss: 0.5588[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 401ms/step - accuracy: 0.8186 - loss: 0.5487[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 403ms/step - accuracy: 0.8183 - loss: 0.5400[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 404ms/step - accuracy: 0.8168 - loss: 0.5351[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 395ms/step - accuracy: 0.8155 - loss: 0.5319
Epoch 14: val_loss improved from 0.57827 to 0.56265, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 471ms/step - accuracy: 0.8146 - loss: 0.5297 - val_accuracy: 0.8131 - val_loss: 0.5627 - learning_rate: 0.0010
Epoch 15/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 917ms/step - accuracy: 0.8594 - loss: 0.4280[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 394ms/step - accuracy: 0.8477 - loss: 0.4376[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 403ms/step - accuracy: 0.8398 - loss: 0.4498[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 405ms/step - accuracy: 0.8384 - loss: 0.4538[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 406ms/step - accuracy: 0.8371 - loss: 0.4579[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 399ms/step - accuracy: 0.8363 - loss: 0.4604
Epoch 15: val_loss did not improve from 0.56265
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 460ms/step - accuracy: 0.8358 - loss: 0.4622 - val_accuracy: 0.8069 - val_loss: 0.5775 - learning_rate: 0.0010
Epoch 16/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 890ms/step - accuracy: 0.8320 - loss: 0.4206[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 405ms/step - accuracy: 0.8320 - loss: 0.4356[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 406ms/step - accuracy: 0.8299 - loss: 0.4487[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 404ms/step - accuracy: 0.8297 - loss: 0.4545[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 401ms/step - accuracy: 0.8305 - loss: 0.4548[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 392ms/step - accuracy: 0.8312 - loss: 0.4550
Epoch 16: val_loss did not improve from 0.56265
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 451ms/step - accuracy: 0.8318 - loss: 0.4551 - val_accuracy: 0.8162 - val_loss: 0.5697 - learning_rate: 0.0010
Epoch 17/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 871ms/step - accuracy: 0.7930 - loss: 0.5424[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 417ms/step - accuracy: 0.8008 - loss: 0.5198[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 413ms/step - accuracy: 0.8047 - loss: 0.5120[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 412ms/step - accuracy: 0.8091 - loss: 0.5034[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8134 - loss: 0.4952[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 398ms/step - accuracy: 0.8160 - loss: 0.4903
Epoch 17: val_loss improved from 0.56265 to 0.55269, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 471ms/step - accuracy: 0.8179 - loss: 0.4868 - val_accuracy: 0.8100 - val_loss: 0.5527 - learning_rate: 0.0010
Epoch 18/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 921ms/step - accuracy: 0.8477 - loss: 0.4269[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 427ms/step - accuracy: 0.8369 - loss: 0.4377[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 422ms/step - accuracy: 0.8353 - loss: 0.4365[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 416ms/step - accuracy: 0.8359 - loss: 0.4360[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 413ms/step - accuracy: 0.8359 - loss: 0.4366[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 402ms/step - accuracy: 0.8358 - loss: 0.4384
Epoch 18: val_loss did not improve from 0.55269
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 462ms/step - accuracy: 0.8357 - loss: 0.4397 - val_accuracy: 0.8193 - val_loss: 0.5539 - learning_rate: 0.0010
Epoch 19/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 886ms/step - accuracy: 0.8711 - loss: 0.4077[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 404ms/step - accuracy: 0.8574 - loss: 0.4216[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 404ms/step - accuracy: 0.8546 - loss: 0.4208[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8534 - loss: 0.4205[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8521 - loss: 0.4220[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 396ms/step - accuracy: 0.8506 - loss: 0.4231
Epoch 19: val_loss improved from 0.55269 to 0.52777, saving model to lesson1.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 466ms/step - accuracy: 0.8495 - loss: 0.4239 - val_accuracy: 0.8255 - val_loss: 0.5278 - learning_rate: 0.0010
Epoch 20/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 909ms/step - accuracy: 0.8633 - loss: 0.4067[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 403ms/step - accuracy: 0.8633 - loss: 0.4045[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 402ms/step - accuracy: 0.8598 - loss: 0.4101[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 403ms/step - accuracy: 0.8592 - loss: 0.4115[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 403ms/step - accuracy: 0.8558 - loss: 0.4165[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 393ms/step - accuracy: 0.8542 - loss: 0.4185
Epoch 20: val_loss did not improve from 0.52777
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 454ms/step - accuracy: 0.8531 - loss: 0.4200 - val_accuracy: 0.8287 - val_loss: 0.5485 - learning_rate: 0.0010
Epoch 21/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 896ms/step - accuracy: 0.8242 - loss: 0.4648[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 413ms/step - accuracy: 0.8301 - loss: 0.4438[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 409ms/step - accuracy: 0.8264 - loss: 0.4489[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 409ms/step - accuracy: 0.8283 - loss: 0.4463[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8306 - loss: 0.4434[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 395ms/step - accuracy: 0.8331 - loss: 0.4397
Epoch 21: val_loss did not improve from 0.52777
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 455ms/step - accuracy: 0.8349 - loss: 0.4370 - val_accuracy: 0.8193 - val_loss: 0.5588 - learning_rate: 0.0010
Epoch 22/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 883ms/step - accuracy: 0.8477 - loss: 0.3913[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 412ms/step - accuracy: 0.8564 - loss: 0.3817[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 409ms/step - accuracy: 0.8583 - loss: 0.3823[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8581 - loss: 0.3850[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 408ms/step - accuracy: 0.8560 - loss: 0.3891[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 396ms/step - accuracy: 0.8545 - loss: 0.3918
Epoch 22: val_loss did not improve from 0.52777

Epoch 22: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 456ms/step - accuracy: 0.8535 - loss: 0.3937 - val_accuracy: 0.8411 - val_loss: 0.5468 - learning_rate: 0.0010
Epoch 23/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 879ms/step - accuracy: 0.8203 - loss: 0.4065[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 401ms/step - accuracy: 0.8301 - loss: 0.4116[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 404ms/step - accuracy: 0.8372 - loss: 0.4086[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 407ms/step - accuracy: 0.8411 - loss: 0.4080[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 407ms/step - accuracy: 0.8435 - loss: 0.4065[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 398ms/step - accuracy: 0.8445 - loss: 0.4063
Epoch 23: val_loss did not improve from 0.52777
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 458ms/step - accuracy: 0.8453 - loss: 0.4061 - val_accuracy: 0.8162 - val_loss: 0.5442 - learning_rate: 5.0000e-04
Epoch 24/40
[1m1/6[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m4s[0m 881ms/step - accuracy: 0.8281 - loss: 0.4090[1m2/6[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m1s[0m 394ms/step - accuracy: 0.8438 - loss: 0.3920[1m3/6[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m1s[0m 404ms/step - accuracy: 0.8498 - loss: 0.3915[1m4/6[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 402ms/step - accuracy: 0.8532 - loss: 0.3898[1m5/6[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 402ms/step - accuracy: 0.8549 - loss: 0.3883[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 393ms/step - accuracy: 0.8547 - loss: 0.3887
Epoch 24: val_loss did not improve from 0.52777
[1m6/6[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m3s[0m 452ms/step - accuracy: 0.8546 - loss: 0.3891 - val_accuracy: 0.8162 - val_loss: 0.5537 - learning_rate: 5.0000e-04
[1m1/2[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 248ms/step - accuracy: 0.7930 - loss: 0.5568[1m2/2[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 53ms/step - accuracy: 0.8088 - loss: 0.5359 
Test loss: 0.5254, Test accuracy: 0.8168
